name: pr tests

on:
  pull_request:
    branches: [ master ]

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: 0 days
          skip-tags: true
          skip-recent: 2

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn install
      - name: Linting JS
        run: yarn lint
      - name: Build
        run: yarn generate
        env:
          INFURA_KEY: ${{ secrets.INFURA_KEY }}
          ALCHEMY_MAINNET_KEY: ${{ secrets.ALCHEMY_MAINNET_KEY }}
          ALCHEMY_POLYGON_KEY: ${{ secrets.ALCHEMY_POLYGON_KEY }}
          ALCHEMY_OPTIMISM_KEY: ${{ secrets.ALCHEMY_OPTIMISM_KEY }}
          ALCHEMY_ARBITRUM_KEY: ${{ secrets.ALCHEMY_ARBITRUM_KEY }}
          ALCHEMY_GOERLI_KEY: ${{ secrets.ALCHEMY_GOERLI_KEY }}
          WC_BRIDGE: ${{ secrets.WC_BRIDGE }}
          OLD_STORE_NAME: ${{ secrets.OLD_STORE_NAME }}
          STORE_NAME: ${{ secrets.STORE_NAME }}
          APP_ENS_NAME: ${{ secrets.APP_ENS_NAME }}
      - name: Upload artefact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: dist-pr
          path: dist

  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      deploy-url: ${{ steps.deploy-to-netlify.outputs.deploy-url }}
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact `dist-pr`
        uses: actions/download-artifact@v1
        with:
          name: dist-pr
          path: dist
      - name: Deploy to Netlify
        id: deploy-to-netlify
        uses: nwtgck/actions-netlify@v1.2
        timeout-minutes: 1
        with:
          publish-dir: './dist'
          #production-branch: master
          deploy-message: Deploy from GitHub Actions PR-${{ github.event.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  tests-smoke:
    name: Fast tests - open url and check wallet connection
    needs: deploy-netlify
    runs-on: [self-hosted]
    steps:
      - name: Checkout e2e-test repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.E2E_REPOSITORY }}
          ssh-key: ${{ secrets.ACCESS_KEY_E2E }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v3
      - name: Install google-chrome
        run: |
          set -ex
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
      - name: Prepare
        run: |
          touch scripts/dir.txt
      - name: Test 1
        run: |
          xvfb-run pytest -m smoke
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}

  tests-mainnet:
    name: Mainnet tests - note account, relayer, wallet
    needs: tests-smoke
    runs-on: [self-hosted]
    steps:
      - name: Checkout e2e-test repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.E2E_REPOSITORY }}
          ssh-key: ${{ secrets.ACCESS_KEY_E2E }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v3
      - name: Install google-chrome
        run: |
          set -ex
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
      - name: Checkout registry ui
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.E2E_TEST_REGISTRY_UI }}
          path: test-registry-ui
      - name: Install test registry ui
        working-directory: ./test-registry-ui/
        run: |
          npm install --global yarn
          yarn
      - name: run fork
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.E2E_RUN_FORK_URL }}
          username: ${{ secrets.E2E_FORK_USER }}
          key: ${{ secrets.ACCESS_KEY_E2E }}
          script: ./fork.sh -t 1d -n ${{ secrets.E2E_RELAYER_NAME }} -i 3000
      - name: Sleep for 5 sec
        run: sleep 5
      - name: Run load money script
        working-directory: ./test-registry-ui/
        run: |
          yarn start
        env:
          RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          WALLET_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          MAINNET_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Sleep for 5 sec
        run: sleep 5
      - name: run relayer
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.E2E_RUN_RELAYER_URL }}
          username: ${{ secrets.E2E_FORK_USER }}
          key: ${{ secrets.ACCESS_KEY_E2E }}
          script: ./run.sh
      - name: Prepare tests
        run: |
          mkdir screenshots
          touch scripts/dir.txt
          echo "127.0.0.1 api.thegraph.com" >> /etc/hosts
      - name: Test 1 - Note account on Mainnet
        run: |
          pytest -m note_account
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 2 - Deposit ETH on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -m mainnet_relayer
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 3 - Deposit ETH on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -m mainnet_fast
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 4 - Deposit USDC on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -s -v -x -m mainnet_relayer_usdc
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 5 - Deposit USDC on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -m mainnet_fast_usdc
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 6 - Deposit USDT on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -m mainnet_relayer_usdt
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 7 - Deposit USDT on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -s -v -x -m mainnet_fast_usdt
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 8 - Deposit DAI on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -m mainnet_relayer_dai
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 9 - Deposit DAI on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -m mainnet_fast_dai
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 10 - Deposit cDAI on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -m mainnet_relayer_cdai
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 11 - Deposit cDAI on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -m mainnet_fast_cdai
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 12 - Deposit WBTC on Mainnet and Withdraw with Relayer
        if: always()
        run: |
          pytest -m mainnet_relayer_wbtc
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}
      - name: Test 13 - Deposit WBTC on Mainnet and Withdraw with Wallet
        if: always()
        run: |
          pytest -m mainnet_fast_wbtc
        env:
          URL_TC_CLASSIC: ${{ needs.deploy-netlify.outputs.deploy-url }}
          METAMASK_PASSWORD: ${{ secrets.E2E_METAMASK_PASSWORD }}
          METAMASK_PHRASE: ${{ secrets.E2E_METAMASK_PHRASE }}
          RECIPIENT_ADDRESS: ${{ secrets.E2E_RECIPIENT_ADDRESS }}
          FORK_USER: ${{ secrets.E2E_FORK_USER }}
          RUN_FORK_URL: ${{ secrets.E2E_RUN_FORK_URL }}
          TEST_RPC_URL: ${{ secrets.E2E_TEST_RPC_URL }}
          RELAYER_NAME: ${{ secrets.E2E_RELAYER_NAME }}
          RUN_RELAYER_URL: ${{ secrets.E2E_RUN_RELAYER_URL }}

      - name: Upload artefact
        if: always()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: screenshots
          path: screenshots/
